{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/imac/Desktop/FullStack/Tutorials/JSMastery/nextjs-ai-mock-interview/firebase/admin.ts"],"sourcesContent":["import { initializeApp, getApps, cert } from \"firebase-admin/app\";\nimport { getAuth } from \"firebase-admin/auth\";\nimport { getFirestore } from \"firebase-admin/firestore\";\n\n// Initialize Firebase Admin SDK\nfunction initFirebaseAdmin() {\n  try {\n    const apps = getApps();\n\n    if (!apps.length) {\n      const privateKey = process.env.FIREBASE_PRIVATE_KEY \n        ? process.env.FIREBASE_PRIVATE_KEY.replace(/\\\\n/g, \"\\n\") \n        : undefined;\n        \n      if (!process.env.FIREBASE_PROJECT_ID || !process.env.FIREBASE_CLIENT_EMAIL || !privateKey) {\n        console.error(\"Firebase Admin SDK credentials missing in environment variables\");\n        throw new Error(\"Firebase Admin SDK initialization failed - missing credentials\");\n      }\n      \n      initializeApp({\n        credential: cert({\n          projectId: process.env.FIREBASE_PROJECT_ID,\n          clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n          privateKey: privateKey,\n        }),\n      });\n    }\n\n    return {\n      auth: getAuth(),\n      db: getFirestore(),\n    };\n  } catch (error) {\n    console.error(\"Firebase Admin SDK initialization error:\", error);\n    throw error;\n  }\n}\n\nexport const { auth, db } = initFirebaseAdmin();\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;AAEA,gCAAgC;AAChC,SAAS;IACP,IAAI;QACF,MAAM,OAAO,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD;QAEnB,IAAI,CAAC,KAAK,MAAM,EAAE;YAChB,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,GAC/C,QAAQ,GAAG,CAAC,oBAAoB,CAAC,OAAO,CAAC,QAAQ,QACjD;YAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,mBAAmB,IAAI,CAAC,QAAQ,GAAG,CAAC,qBAAqB,IAAI,CAAC,YAAY;gBACzF,QAAQ,KAAK,CAAC;gBACd,MAAM,IAAI,MAAM;YAClB;YAEA,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;gBACZ,YAAY,CAAA,GAAA,gJAAA,CAAA,OAAI,AAAD,EAAE;oBACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;oBAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;oBAC9C,YAAY;gBACd;YACF;QACF;QAEA,OAAO;YACL,MAAM,CAAA,GAAA,kJAAA,CAAA,UAAO,AAAD;YACZ,IAAI,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD;QACjB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4CAA4C;QAC1D,MAAM;IACR;AACF;AAEO,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/imac/Desktop/FullStack/Tutorials/JSMastery/nextjs-ai-mock-interview/lib/actions/auth.action.ts"],"sourcesContent":["\"use server\";\n\nimport { auth, db } from \"@/firebase/admin\";\nimport { cookies } from \"next/headers\";\n\ninterface FirebaseAuthError extends Error {\n  code?: string;\n  message: string;\n}\n\n// Session duration (1 week)\nconst SESSION_DURATION = 60 * 60 * 24 * 7;\n\n// Set session cookie\nexport async function setSessionCookie(idToken: string) {\n  try {\n    const cookieStore = await cookies();\n\n    // Verify the token before creating a session\n    await auth.verifyIdToken(idToken);\n    \n    // Create session cookie\n    const sessionCookie = await auth.createSessionCookie(idToken, {\n      expiresIn: SESSION_DURATION * 1000, // milliseconds\n    });\n\n    // Set cookie in the browser\n    cookieStore.set(\"session\", sessionCookie, {\n      maxAge: SESSION_DURATION,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      path: \"/\",\n      sameSite: \"lax\",\n    });\n  } catch (error: unknown) {\n    console.error(\"Error setting session cookie:\", error);\n    const firebaseError = error as FirebaseAuthError;\n    if (firebaseError.code === \"auth/invalid-id-token\" || firebaseError.code === \"auth/invalid-credential\") {\n      throw new Error(\"Invalid authentication token. Please sign in again.\");\n    }\n    throw error;\n  }\n}\n\nexport async function signUp(params: SignUpParams) {\n  const { uid, name, email } = params;\n\n  try {\n    // check if user exists in db\n    const userRecord = await db.collection(\"users\").doc(uid).get();\n    if (userRecord.exists)\n      return {\n        success: false,\n        message: \"User already exists. Please sign in.\",\n      };\n\n    // save user to db\n    await db.collection(\"users\").doc(uid).set({\n      name,\n      email,\n      // profileURL,\n      // resumeURL,\n    });\n\n    return {\n      success: true,\n      message: \"Account created successfully. Please sign in.\",\n    };\n  } catch (error: unknown) {\n    console.error(\"Error creating user:\", error);\n    const firebaseError = error as FirebaseAuthError;\n\n    // Handle Firebase specific errors\n    if (firebaseError.code === \"auth/email-already-exists\") {\n      return {\n        success: false,\n        message: \"This email is already in use\",\n      };\n    }\n\n    return {\n      success: false,\n      message: \"Failed to create account. Please try again.\",\n    };\n  }\n}\n\nexport async function signIn(params: SignInParams) {\n  const { email, idToken } = params;\n\n  try {\n    const userRecord = await auth.getUserByEmail(email);\n    if (!userRecord)\n      return {\n        success: false,\n        message: \"User does not exist. Create an account.\",\n      };\n\n    try {\n      await setSessionCookie(idToken);\n    } catch (sessionError: unknown) {\n      console.error(\"Session cookie error:\", sessionError);\n      const firebaseError = sessionError as FirebaseAuthError;\n      return {\n        success: false,\n        message: firebaseError.code === \"auth/invalid-credential\" \n          ? \"Invalid credentials. Please sign in again.\" \n          : \"Failed to create session. Please try again.\",\n      };\n    }\n  } catch (error: unknown) {\n    console.error(\"Authentication error:\", error);\n    const firebaseError = error as FirebaseAuthError;\n    return {\n      success: false,\n      message: firebaseError.code === \"auth/invalid-credential\" \n        ? \"Invalid credentials. Please try again.\" \n        : \"Failed to log into account. Please try again.\",\n    };\n  }\n}\n\n// Sign out user by clearing the session cookie\nexport async function signOut() {\n  const cookieStore = await cookies();\n\n  cookieStore.delete(\"session\");\n}\n\n// Get current user from session cookie\nexport async function getCurrentUser(): Promise<User | null> {\n  const cookieStore = await cookies();\n\n  const sessionCookie = cookieStore.get(\"session\")?.value;\n  if (!sessionCookie) return null;\n\n  try {\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n\n    // get user info from db\n    const userRecord = await db\n      .collection(\"users\")\n      .doc(decodedClaims.uid)\n      .get();\n    if (!userRecord.exists) return null;\n\n    return {\n      ...userRecord.data(),\n      id: userRecord.id,\n    } as User;\n  } catch (error: unknown) {\n    console.error(\"Session verification error:\", error);\n\n    // Invalid or expired session\n    return null;\n  }\n}\n\n// Check if user is authenticated\nexport async function isAuthenticated() {\n  const user = await getCurrentUser();\n  return !!user;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///Users/imac/Desktop/FullStack/Tutorials/JSMastery/nextjs-ai-mock-interview/app/%28root%29/layout.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport Image from \"next/image\";\nimport { ReactNode } from \"react\";\nimport { redirect } from \"next/navigation\";\n\nimport { isAuthenticated } from \"@/lib/actions/auth.action\";\n\nconst Layout = async ({ children }: { children: ReactNode }) => {\n  const isUserAuthenticated = await isAuthenticated();\n  if (!isUserAuthenticated) redirect(\"/sign-in\");\n\n  return (\n    <div className=\"root-layout\">\n      <nav>\n        <Link href=\"/\" className=\"flex items-center gap-2\">\n          <Image src=\"/logo.svg\" alt=\"MockMate Logo\" width={38} height={32} />\n          <h2 className=\"text-primary-100\">PrepWise</h2>\n        </Link>\n      </nav>\n\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAAA;AAEA;;;;;;;;;;AAEA,MAAM,SAAS,OAAO,EAAE,QAAQ,EAA2B;IACzD,MAAM,sBAAsB,MAAM,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD;IAChD,IAAI,CAAC,qBAAqB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCACvB,8OAAC,6HAAA,CAAA,UAAK;4BAAC,KAAI;4BAAY,KAAI;4BAAgB,OAAO;4BAAI,QAAQ;;;;;;sCAC9D,8OAAC;4BAAG,WAAU;sCAAmB;;;;;;;;;;;;;;;;;YAIpC;;;;;;;AAGP;uCAEe","debugId":null}}]
}